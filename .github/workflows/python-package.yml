
name: CI

on:
  push:
  pull_request:

jobs:
  python:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Pre-install
      run: |
        pip install --no-deps .
        python -c "import bussilab"
        bussilab -h
        pip uninstall --yes bussilab
    - name: Install
      run: |
        python -m pip install --upgrade pip
        pip install .
    - name: Test with pytest
      env:
        BUSSILAB_TEST_NOTIFY_TOKEN: ${{ secrets.BUSSILAB_TEST_NOTIFY_TOKEN }}
        BUSSILAB_TEST_NOTIFY_CHANNEL: ${{ secrets.BUSSILAB_TEST_NOTIFY_CHANNEL }}
      run: |
        bussilab check --import
        pip install pytest pytest-cov
        pytest -v
        NUMBA_DISABLE_JIT=1 PYTHONPATH=$PWD pytest -v --cov=bussilab
        bash <(curl -s https://codecov.io/bash)
    - name: Pyflakes
      run: |
        pip install --upgrade pyflakes
        pyflakes bussilab
    - name: Pylint
      run: |
        pip install --upgrade  pylint
        pylint -E bussilab
    - name: Mypy
      run: |
        pip install --upgrade  mypy
        mypy bussilab
    - name: Flake8
      run: |
        pip install --upgrade flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Doc
      run: |
        pip install --upgrade pdoc3 jupyter nbconvert
        pdoc3 -f --html -o doc/ bussilab
        ( cd examples && ./render.sh )
        mkdir doc/examples
        cp examples/*html doc/examples/
        ( sudo apt-get install tree && cd doc/examples && tree -H '.' -L 1 --noreport --charset utf-8 > index.html )
    - name: Push doc
      if: ${{ matrix.python-version == "3.8" && github.ref == "refs/heads/master" }}
      env:
        BUSSILABBOT_TOKEN: ${{ secrets.BUSSILABBOT_TOKEN }}
      run: |
        .travis/pushdoc

  macports:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Install MacPorts
      run: |
        curl -LO https://raw.githubusercontent.com/GiovanniBussi/macports-ci/master/macports-ci
        source ./macports-ci install
    - name: Install package
      run: |
        sudo port install python38 py38-pip py38-setuptools
        pip-3.8 install --user --no-deps .
        PATH="$(python3.8 -c 'import site; print(site.USER_BASE + "/bin")'):$PATH"
        sudo port install $(bussilab required --macports --pyver 38)
    - name: Run tests
      run: |
        PATH="$(python3.8 -c 'import site; print(site.USER_BASE + "/bin")'):$PATH"
        bussilab check --import
        sudo port install py38-pytest
        # ignore BUSSILAB_TEST_NOTIFY_TOKEN since it does not work with macports for some reason
        pytest-3.8 -v

  conda:

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
     
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Install conda
      run: |
        curl -LO https://raw.githubusercontent.com/GiovanniBussi/conda-ci/master/conda-ci
        source ./conda-ci install
        source ./conda-ci install-conda-build
    - name: Build
      run: |
        source activate base
        python make_conda_recipe.py
        export CPU_COUNT=2
        conda-build -c conda-forge conda
        conda install -c conda-forge -c local py-bussilab ;
    - name: Test
      run: |
        source activate base
        conda install -c conda-forge pytest pytest-cov
        pytest -v

