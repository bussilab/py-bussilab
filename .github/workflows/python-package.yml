
name: CI

on:
  push:
  pull_request:

jobs:
  python:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Pre-install
      run: |
        python -m pip install --upgrade pip
        pip install --no-deps .
        python -c "import bussilab"
        bussilab -h
        pip uninstall --yes bussilab
    - name: Install
      run: |
        pip install .
    - name: Test with pytest
      env:
        BUSSILAB_TEST_NOTIFY_TOKEN: ${{ secrets.BUSSILAB_TEST_NOTIFY_TOKEN }}
        BUSSILAB_TEST_NOTIFY_CHANNEL: ${{ secrets.BUSSILAB_TEST_NOTIFY_CHANNEL }}
      run: |
        bussilab check --import
        pip install pytest pytest-cov
        pytest -v
        NUMBA_DISABLE_JIT=1 PYTHONPATH=$PWD pytest -v --cov=bussilab
        bash <(curl -s https://codecov.io/bash)
    - name: Pyflakes
      run: |
        pip install --upgrade pyflakes
        pyflakes bussilab
    - name: Pylint
      run: |
        pip install --upgrade  pylint
        pylint -E bussilab
#   - name: Mypy
#     run: |
#       pip install --upgrade  mypy
#       mypy bussilab
    - name: Flake8
      run: |
        pip install --upgrade flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 bussilab bin --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Doc
      run: |
        pip install --upgrade pdoc3 jupyter nbconvert
        pdoc3 -f --html -o doc/ bussilab
        ( cd examples && ./render.sh )
        mkdir doc/examples
        cp examples/*html doc/examples/
        ( sudo apt-get install tree && cd doc/examples && tree -H '.' -L 1 --noreport --charset utf-8 > index.html )
    - name: Push doc
      if: ${{ matrix.python-version == '3.10' && github.ref == 'refs/heads/master' }}
      env:
        BUSSILABBOT_TOKEN: ${{ secrets.BUSSILABBOT_TOKEN }}
      run: |
        .ci/pushdoc
    - name: Deploy PyPI
      if: ${{ matrix.python-version == '3.10' && startsWith(github.ref, 'refs/tags/') }}
      env:
        BUSSILABBOT_PYPI: ${{ secrets.BUSSILABBOT_PYPI }}
      run: |
        pip install twine
        python setup.py sdist
        python -m twine upload -u bussilabbot -p "$BUSSILABBOT_PYPI" dist/bussilab-*.tar.gz

  macsimple:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install
      run: |
        pip3 install .
    - name: Test with pytest
      run: |
        pip3 install pytest
        pytest -v

  macports:
    # The type of runner that the job will run on
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Install MacPorts
      run: |
        curl -LO https://raw.githubusercontent.com/GiovanniBussi/macports-ci/master/macports-ci
        source ./macports-ci install
    - name: Setup environment
      run: |
        awk 'BEGIN{
          a="${{ matrix.python-version }}"
          gsub("\"","",a);
          print("MACPORTS_PY=" a )
          gsub("\\.","",a);
          print("MACPORTS_PY_ND=" a )
        }' >> $GITHUB_ENV
    - name: Install requirements and set paths
      run: |
        sudo port install python$MACPORTS_PY_ND py$MACPORTS_PY_ND-pip py$MACPORTS_PY_ND-setuptools
        echo PATH="$(python$MACPORTS_PY -c 'import site; print(site.USER_BASE + "/bin")'):$PATH" >> $GITHUB_ENV
        # the re.sub() command is necessary since site.USER_SITE seems to be incorrectly set to
        # /Users/runner/Library/Python/3.9/lib/python/site-packages
        # instead of the correct
        # /Users/runner/Library/Python/3.9/lib/python3.9/site-packages
        # to be checked
        echo PYTHONPATH="$(python$MACPORTS_PY -c 'import site; import re; print(re.sub("python/","python'${MACPORTS_PY}'/",site.USER_SITE))'):$PYTHONPATH" >> $GITHUB_ENV
    - name: Install package
      run: |
        pip-$MACPORTS_PY install --user --no-deps .
        sudo port install $(bussilab required --macports --pyver $MACPORTS_PY_ND)
    - name: Run tests
      run: |
        PATH="$(python$MACPORTS_PY -c 'import site; print(site.USER_BASE + "/bin")'):$PATH"
        bussilab check --import
        sudo port install py$MACPORTS_PY_ND-pytest
        # ignore BUSSILAB_TEST_NOTIFY_TOKEN since it does not work with macports for some reason
        pytest-$MACPORTS_PY -v

  conda:

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
     
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Install conda
      run: |
        curl -LO https://raw.githubusercontent.com/GiovanniBussi/conda-ci/master/conda-ci
        source ./conda-ci install
        source ./conda-ci install-conda-build
    - name: Build
      run: |
        source activate base
        python make_conda_recipe.py
        export CPU_COUNT=2
        conda-build -c conda-forge conda
        rm -fr bussilab # make sure this is not imported by mistake in tests
    - name: Test 3.7
      run: |
        source activate base
        conda create -n py37 -c conda-forge -c local python=3.7 py-bussilab pytest
        source activate py37
        pytest -v
    - name: Test 3.8
      run: |
        source activate base
        conda create -n py38 -c conda-forge -c local python=3.8 py-bussilab pytest
        source activate py38
        pytest -v
    - name: Test 3.9
      run: |
        source activate base
        conda create -n py39 -c conda-forge -c local python=3.9 py-bussilab pytest
        source activate py39
        pytest -v
    - name: Test 3.10
      run: |
        source activate base
        conda create -n py310 -c conda-forge -c local python=3.10 py-bussilab pytest
        source activate py310
        pytest -v
    - name: Deploy conda
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      env: 
        CONDA_UPLOAD_TOKEN: ${{ secrets.CONDA_UPLOAD_TOKEN }}
      run: |
        source activate base
        anaconda -t $CONDA_UPLOAD_TOKEN upload -u bussilab -l main $CONDA_PREFIX/conda-bld/*-64/py-bussilab*.tar.bz2 --force


